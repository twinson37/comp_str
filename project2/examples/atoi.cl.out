[A2I]{c2i(char[String])[Int](if (= char "0") 0 (if (= char "1") 1 (if (= char "2") 2 (if (= char "3") 3 (if (= char "4") 4 (if (= char "5") 5 (if (= char "6") 6 (if (= char "7") 7 (if (= char "8") 8 (if (= char "9") 9 (abort() 0)))))))))))}{i2c(i[Int])[String](if (= i 0) "0" (if (= i 1) "1" (if (= i 2) "2" (if (= i 3) "3" (if (= i 4) "4" (if (= i 5) "5" (if (= i 6) "6" (if (= i 7) "7" (if (= i 8) "8" (if (= i 9) "9" (abort() "")))))))))))}{a2i(s[String])[Int](if (= s.length() 0) 0 (if (= s.substr(0 1) "-") (~ a2i_aux(s.substr(1 (- s.length() 1)))) (if (= s.substr(0 1) "+") a2i_aux(s.substr(1 (- s.length() 1))) a2i_aux(s))))}{a2i_aux(s[String])[Int](let (int[Int]<-0) ((let (j[Int]<-s.length()) (let (i[Int]<-0) (while (< i j) (int<-(+ (* int 10) c2i(s.substr(i 1))) i<-(+ i 1))))) int))}{i2a(i[Int])[String](if (= i 0) "0" (if (< 0 i) i2a_aux(i) "-".concat(i2a_aux((* i (~ 1))))))}{i2a_aux(i[Int])[String](if (= i 0) "" (let (next[Int]<-(/ i 10)) i2a_aux(next).concat(i2c((- i (* next 10))))))}
