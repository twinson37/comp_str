[Main][IO]{main()[SELF_TYPE](let (c[Complex]<-(new Complex).init(1 1)) ((if (= c.reflect_X() c.reflect_0()) out_string("=)\n") out_string("=(\n")) (if c.reflect_X().reflect_Y().equal(c.reflect_0()) out_string("=)\n") out_string("=(\n"))))}
[Complex][IO]{x[Int]}{y[Int]}{init(a[Int]b[Int])[Complex]((= x a) (= y b) self)}{print()[Object](if (= y 0) out_int(x) out_int(x).out_string("+").out_int(y).out_string("I"))}{reflect_0()[Complex]((= x (~ x)) (= y (~ y)) self)}{reflect_X()[Complex]((= y (~ y)) self)}{reflect_Y()[Complex]((= x (~ x)) self)}{equal(d[Complex])[Bool](if (= x d.x_value()) (if (= y d.y_value()) true false) false)}{x_value()[Int]x}{y_value()[Int]y}
